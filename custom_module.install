<?php
/**
 * @file
 * Custom Module installation
 */

/**
 * Implements hook_install().
 */
function custom_module_install() {
  // Set default variables.
  variable_set('custom_module_gmap', 1);
  variable_set('custom_module_default_center_lat', 42.91455);
  variable_set('custom_module_default_center_long', -75.569851);
  variable_set('custom_module_default_gmap_zoom', 8);

  // Get localization function for installation as t() may be unavailable.
  $t = get_t();

  // Give user feedback.
  drupal_set_message($t('Custom Module variables created.'));
}

// Content type definition.
$content_type = array(
  'type' => 'custom_module',
  'name' => $t('Custom Module'),
  'description' => $t('A Custom Module, including Fields.'),
  'title_label' => $t('Title or Name'),
  'base' => 'node_content',
  'custom' => TRUE,
);

// Set remaining definitions with defaults.
$node_type = node_type_set_defaults($content_type);

// Save the content type.
node_type_save($node_type);
}


  // Add a field for the body.
  node_add_body_field($node_type, $t('Description'));

  // Create fields.
  $fields = array();

  $fields['custom_module_unit_count'] = array(
    'field_name' => 'custom_module_unit_count',
    'type' => 'number_integer',
    // Optional.
    'cardinality' => 1,
    'settings' => array(
      'max_length' => 5,
    ),
  );

  $fields['custom_module_latitude'] = array(
    'field_name' => 'custom_module_latitude',
    'type' => 'number_float',
    'settings' => array(
      'max_length' => 20,
    ),
  );

  $fields['custom_module_longitude'] = array(
    'field_name' => 'custom_module_longitude',
    'type' => 'number_float',
    'settings' => array(
      'max_length' => 20,
    ),
  );

  $fields['custom_module_city'] = array(
    'field_name' => 'custom_module_city',
    'type' => 'text',
    'settings' => array(
      'max_length' => 60,
    ),
  );

  foreach ($fields as $field) {
    field_create_field($field);
  }

  // Create Field Instances.
  $instances = array();

  $instances['custom_module_unit_count'] = array(
    'field_name' => 'custom_module_unit_count',
    'label' => $t('Number of Units'),
    'description' => $t('Number of individual units.'),
    'widget' => array(
      'type' => 'text_textfield',
    ),
    'required' => TRUE,
    'settings' => array(
      'text_processing' => 0,
    ),
  );

  $instances['custom_module_latitude'] = array(
    'field_name' => 'custom_module_latitude',
    'label' => $t('Latitude'),
    'description' => $t('Signed degrees format (DDD.dddd)'),
    'widget' => array(
      'type' => 'text_textfield',
    ),
    'settings' => array(
      'text_processing' => 0,
    ),
    'display' => array(
      'default' => array(
        'type' => 'hidden',
      ),
    ),
  );

  $instances['custom_module_longitude'] = array(
    'field_name' => 'custom_module_longitude',
    'label' => $t('Longitude'),
    'description' => $t('Signed degrees format (DDD.dddd)'),
    'widget' => array(
      'type' => 'text_textfield',
    ),
    'settings' => array(
      'text_processing' => 0,
    ),
    'display' => array(
      'default' => array(
        'type' => 'hidden',
      ),
    ),
  );

  $instances['custom_module_city'] = array(
    'field_name' => 'custom_module_city',
    'label' => $t('The City'),
    'description' => $t('The name of the City'),
    'widget' => array(
      'type' => 'text_textfield',
    ),
    'display' => array(
      'default' => array(
        'label' => 'inline',
      ),
    ),
  );

  foreach ($instances as $instance) {
    $instance['entity_type'] = 'node';
    $instance['bundle'] = 'custom_module';
    field_create_instance($instance);
  }
}

/**
 * Implements hook_uninstall().
 */
function custom_module_uninstall() {
  // Delete variables.
  variable_del('custom_module_gmap');
  variable_del('custom_module_default_center_lat');
  variable_del('custom_module_default_center_long');
  variable_del('custom_module_default_gmap_zoom');

  // Inform the user of the removal.
  $t = get_t();
  drupal_set_message($t('Custom Module variables removed.'));

  //Get all node IDs with "custom module" content type.
  $sql_query = 'SELECT nid ';
  $sql_query .= 'FROM {node} ';
  $sql_query .= 'WHERE {node}.type = :type ';
  $result = db_query($sql_query, array(':type' => 'custom_module'))

  $nids = array();
  foreach ($result as $row) {
    $nids[] = $row->nid;
  }

  //Delete all custom_module content
  node_delete_multiple($nids)
  drupal_set_message($t('Custom Codule content removed.'))

  // Remove all fields and field instances.
 foreach (field_info_instances('node', 'custom_module') as $field_name => $instance) {
   field_delete_field($field_name);
   field_delete_instance($instance);
 }
 drupal_set_message($t('Custom Module field and field instances removed.'));

 // Delete the content type.
 node_type_delete('custom_module');
 drupal_set_message($t('Custom Module Content Type removed.'));

 // Clean up deleted fields.
 field_purge_batch(1000);

}

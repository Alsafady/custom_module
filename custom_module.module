<?php
/**
 * @file
 *
 */

 /**
  * Implements hook_help().
  */
 function custom_module_help($path, $arg) {
   switch ($path) {
     case 'admin/help#custom_module':{
       $ret_val = '<h3>' . t('About') . '</h3>';
       $ret_val .= '<p>' . t('Custom Module.') . '</p>';
       return $ret_val;
       break;
     }
   }
 }
 /**
  * Implements hook_permission().
  */
 function custom_module_permission() {
   return array(
     'Custom Module Drupal 7' => array(
       'title' => t('Custom Module'),
       'description' => t('Custom Module in Drupal 7.'),
     ),
   );
 }

 /**
  * Implements hook_menu().
  */
 function custom_module_menu() {
   $items = array();

   // Admin configuration group.
   $items['admin/config/custom_module'] = array(
     'title' => 'Custom Module',
     'description' => 'Administer Custom Module in Drupal 7.',
     'access arguments' => array('administer Custom Module'),
   );

   // Admin configuration - Settings.
   $items['admin/config/custom_module/manage'] = array(
     'title' => 'Custom Module settings',
     'description' => 'Manage Custom Module settings and configurations.',
     'access arguments' => array('administer Custom Module'),
     'page callback' => 'drupal_get_form',
     'page arguments' => array('custom_module_admin_settings_form'),
   );

   return $items;
 }

 /**
  * Implements hook_form().
  */
 function custom_module_admin_settings_form($node, &$form_state) {
   $form = array();

   $form['overview'] = array(
     '#markup' => t('This interface allows administrators to manage general Custom Module Settings'),
     '#prefix' => '<p>',
     '#suffix' => '</p>',
   );

   $form['custom_module_gmap'] = array(
     '#title' => t('Enable Google Maps'),
     '#description' => t('When enabled, Google Maps will be rendered if latitude and longitude are known.'),
     '#type' => 'checkbox',
     '#default_value' => '#default_value' => variable_get('custom_module_gmap'),
   );

   $form['default_center'] = array(
     '#title' => t('Map Center'),
     '#description' => t('Location of the center of the map of wind farms.'),
     '#type' => 'fieldset',
     '#collapsible' => TRUE,
     '#collapsed' => FALSE,
   );

   $form['default_center']['custom_module_default_center_lat'] = array(
     '#title' => t('Latitude'),
     '#description' => t('Signed degrees format (DDD.dddd)'),
     '#type' => 'textfield',
     '#default_value' => variable_get('custom_module_default_center_lat'),
     '#required' => TRUE,
   );

   $form['default_center']['custom_module_default_center_long'] = array(
     '#title' => t('Longitude'),
     '#description' => t('Signed degrees format (DDD.dddd)'),
     '#type' => 'textfield',
     '#default_value' => variable_get('custom_module_default_center_long'),
     '#required' => TRUE,
   );

   $options = range(0, 20, 1);
   $options[0] = t('0 - Furthest');
   $options[20] = t('20 - Closest');

   $form['custom_module_default_gmap_zoom'] = array(
     '#title' => t('Google Map zoom'),
     '#description' => t('Default level of zoom, between 0 and 20.'),
     '#type' => 'select',
     '#options' => $options,
     '#default_value' => variable_get('custom_module_default_gmap_zoom'),
     '#required' => TRUE,
   );

   $form['submit'] = array(
     '#type' => 'submit',
     '#value' => t('Save'),
   );

   return $form;
 }


 /**
  * Validates Custom Module admin settings.
  */
 function custom_module_admin_settings_form_validate($form, &$form_state) {
   //dpm($form_state['values']);

   // Regular expression for validating signed degrees.
   $signed_degree_regex = '/^[+-]?\d+(\.\d+)?$/';

   // Shorthand for long array names.
   $lat = $form_state['values']['custom_module_default_center_lat'];
   $long = $form_state['values']['custom_module_default_center_long'];

   // Validate latitude and longitude format.
   if (!preg_match($signed_degree_regex, $lat)) {
     form_set_error('custom_module_default_center_lat', t('Invalid latitude; must be a signed degree (DDD.dddd).'));
   }
   if (!preg_match($signed_degree_regex, $long)) {
     form_set_error('custom_module_default_center_long', t('Invalid longitude; must be a signed degree (DDD.dddd).'));
   }

   // Validate latitude and longitude values.
   if (!((-180 <= $lat) && ($lat <= 180))) {
     form_set_error('custom_module_default_center_lat', t('Latitude must be between -180 and 180'));
   }
   if (!((-180 <= $long) && ($long <= 180))) {
     form_set_error('custom_module_default_center_long', t('Longitude must be between -180 and 180'));
   }
 }

 /**
  * Process a validated Custom Module admin setting submission.
  */
 function custom_module_admin_settings_form_submit($form, &$form_state) {
   // Rebuild the form.
   $form_state['rebuild'] = TRUE;

   // Save Custom Module setting variables.
   variable_set('custom_module_gmap', $form_state['values']['custom_module_gmap']);
   variable_set('custom_module_default_center_lat', $form_state['values']['custom_module_default_center_lat']);
   variable_set('custom_module_default_center_long', $form_state['values']['custom_module_default_center_long']);
   variable_set('custom_module_default_gmap_zoom', $form_state['values']['custom_module_default_gmap_zoom']);

   // Notify user.
   drupal_set_message(t('Custom Module settings saved.'));
 }
